name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: "${{ secrets.MONGO_PASSWORD }}"

jobs:
    unit-testing:
        name: Unit Testing
        container:
          image: node:20

        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
          # uses: actions/setup-node@v3
          # with:
          #   node-version: 20
        
        - name: Cache NPM depndencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: '${{runner.os}}-node-${{hashFiles(''package-lock.json'')}}'
            restore-keys: |
              ${{runner.os}}-node-

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: Mocha-Test-Result
            path: test-results.xml
            
    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 18
        
        - name: Install Dependencies
          run: npm install
        
        - name: Code Coverage
          run: npm run coverage
          continue-on-error: true
        
        - name: upload Code Coverage
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5
    
    docker:
        runs-on: ubuntu-latest
        needs: [unit-testing,code-coverage]
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Docker login
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: '${{github.repository_owner}}'
            password: '${{ secrets.GITHUBTOKEN }}'
        
        - name: Build Docker Image
          uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{github.repository_owner}}/solar-system:${{github.sha}}'

    dev-deploy:
        runs-on: ubuntu-latest
        needs: docker
        environment:
          name: development
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Install Kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.26.0'
        
        - name: set kube context
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: '${{secrets.KUBECONFIG}}'
        
        - name: run kubectl command to verify
          run: kubectl version --short -o yaml

        - name: fetch nginx ingress controller ip address
          run: echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')">>$GITHUB_ENV

        - name: Replace placeholders in kubernetes directory
          uses: cschleiden/replace-tokens@v1
          with:
            files: '["kubernetes/development/*.yaml"]'
          env:
            INGRESS_IP: '${{env.INGRESS_IP}}'
            NAMESPACE: '${{vars.NAMESPACE}}'
            REPLICAS: '${{vars.REPLICAS}}'
            IMAGE: 'ghcr.io/${{github.repository_owner}}/solar-system:${{github.sha}}'
        - name: Display yaml files
          run: cat kubernetes/development/*.yaml
